SLEP.mSolves Sturm-Liouville Eigenvalue problem (SLEP) with various boundary conditions (Dirichlet, Neumann, Mixed) numerically. Below is the general form of SLEP:(p(x) y^' )^'+q(x)y=-lambda*r(x)yThis function converts this SLEP into a general eigenvalue problem and outputs eigenvalues and eigenvectors. The numerical method used in this script is explained in detail in “SLEP Numerical Solution.docx”.  SLEPsolve.mThis code shows the outputs of SLEP.m: the eigenvalues and eigenfunctions. This also shows the orthogonality of the eigenvalues. HE_nonuniformRod.mThis code solves the heat flow in a rod with nonuniform density (with or without source term) using SLEP.m and shows how heat distribution along the rod changes over time.       Heat equation:      c*rho*du/dt=d/dx(K0*du/dx))+Qwhere c is specific heat, rho is the density of the rod, K0 is thermal conductivity, and Q is the heat source.       The initial heat distribution along the rod is set to acos(cos(x)+1)      Assumed mixed boundary condition u(a,t)=0=du/dx(b,t)HE_nonuniformRod_jump.mThis code is the same as HE_nonuniformRod.m except that this one has a different initial condition. Includes jump discontinuities at the initial condition. HE_uniformRod.mThis code is the same as HE_nonuniformRod.m except that this one has uniform density along the rod. VibratingRectangularMembrane_analytical.m	This code solves the vibration of a rectangular membrane analytically, following the analytic method shown in the textbook (Applied Partial Differential Equations, Richard Haberman, Fourth Edition) chapter 7.3 p280. Outputs animation of vibrating rectangular membrane. VibratingRectangularMembrane_numerical.m	This code solves the vibration of a rectangular membrane numerically using SLEP.m. Outputs animation of vibrating rectangular membrane. vibrating_nonuniformString.m	This code outputs vibration of string with non-uniform density by solving wave equation rho*du”/d”t=T0*du”/d”x numerically using SLEP.m. Initial condition u(x,0)=f(x) and du/dt=g(x) and Dirichlet boundary condition. fn_p.m	Input function “p” to SLEPsolve.mfn_q.m	Input function “q” to SLEPsolve.mfn_r.m	Input function “r” to SLEPsolve.m